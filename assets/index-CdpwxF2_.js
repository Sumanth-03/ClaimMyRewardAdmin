import{a7 as n,a5 as i,a6 as d,a3 as l,a4 as g}from"./index-CuCeFzuJ.js";async function u(a){return n.fetchData({url:"/getDashMissingPoints",method:"get",params:a})}async function R(a){return n.fetchData({url:"/postMPTicketStatus",method:"post",data:a})}async function f(a){return n.fetchData({url:"/getDashMissingPointsKeyword",method:"get",params:a})}const c="merchantRewardTracking",s=i(c+"/getMerchantRewardtDetails",async a=>(await u(a)).data),r=i(c+"/getMerchantRewardtDetailsKeyword",async a=>(await f(a)).data),p={total:0,page:1,limit:10,key:"",sortBy:"createdAt:desc"},h={loading:!1,refresh:0,TrackingList:[],tableData:p,filterData:{}},o=d({name:`${c}/state`,initialState:h,reducers:{setTableData:(a,e)=>{a.tableData=e.payload},setRefresh:(a,e)=>{a.refresh=e.payload}},extraReducers:a=>{a.addCase(s.fulfilled,(e,t)=>{e.TrackingList=t.payload.data||[],e.loading=!1}).addCase(s.pending,e=>{e.loading=!0}).addCase(s.rejected,(e,t)=>{console.error("API Request Failed:",t.error.message),e.loading=!1}).addCase(r.fulfilled,(e,t)=>{e.TrackingList=t.payload.data||[],e.loading=!1}).addCase(r.pending,e=>{e.loading=!0}).addCase(r.rejected,(e,t)=>{console.error("API Request Failed:",t.error.message),e.loading=!1})}}),{setTableData:w,setRefresh:m}=o.actions,D=o.reducer,T=l({data:D}),k=g;export{r as a,m as b,R as c,s as g,T as r,w as s,k as u};
